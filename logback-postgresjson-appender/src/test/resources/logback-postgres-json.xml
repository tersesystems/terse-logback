<!--

    SPDX-License-Identifier: CC0-1.0

    Copyright 2018-2019 Will Sargent.

    Licensed under the CC0 Public Domain Dedication;
    You may obtain a copy of the License at

        http://creativecommons.org/publicdomain/zero/1.0/

-->
<configuration>

    <!-- async appender needs a shutdown hook to make sure this clears -->
    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>

    <!-- SQL is blocking, so use an async lmax appender here -->
    <appender name="ASYNC_POSTGRES" class="net.logstash.logback.appender.LoggingEventAsyncDisruptorAppender">

        <appender class="com.tersesystems.logback.postgresjson.PostgresJsonAppender">
            <!--
            CREATE TABLE logging_table (
               ID serial NOT NULL PRIMARY KEY,
               ts TIMESTAMPTZ(6) NOT NULL,
               tse_ms bigint NOT NULL,
               start_ms bigint NULL,
               level_value int NOT NULL,
               level VARCHAR(7) NOT NULL,
               evt jsonb NOT NULL
            );
            -->
            <!-- SQL statement takes a TIMESTAMP, LONG, INT, VARCHAR, PGObject -->
            <sqlStatement>insert into logging_table(ts, tse_ms, start_ms, level_value, level, evt) values(?, ?, ?, ?, ?, ?)</sqlStatement>

            <url>jdbc:postgresql://localhost:5432/logback</url>
            <username>logback</username>
            <password>logback</password>

            <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            </encoder>
        </appender>
    </appender>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%-5relative %-5level %logger{35} - %msg%n</pattern>
        </encoder>
    </appender>

    <root level="INFO">
        <appender-ref ref="ASYNC_POSTGRES"/>
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>